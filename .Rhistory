AVG(impact_stats.sal_per_USG) AS avg_spUSG,
MAX(impact_stats.per_cap) AS max_sal,
MAX(impact_stats.sal_per_min) AS max_spMP,
MAX(impact_stats.sal_per_WS) AS max_spWS,
MAX(impact_stats.sal_per_BPM) AS max_spBPM,
MAX(impact_stats.sal_per_PTS) AS max_spPTS,
MAX(impact_stats.sal_per_PER) AS max_spPER,
MAX(impact_stats.sal_per_VORP) AS max_spVORP,
MAX(impact_stats.sal_per_USG) AS max_spUSG,
MIN(impact_stats.per_cap) AS min_sal,
MIN(impact_stats.sal_per_min) AS min_spMP,
MIN(impact_stats.sal_per_WS) AS min_spWS,
MIN(impact_stats.sal_per_BPM) AS min_spBPM,
MIN(impact_stats.sal_per_PTS) AS min_spPTS,
MIN(impact_stats.sal_per_PER) AS min_spPER,
MIN(impact_stats.sal_per_VORP) AS min_spVORP,
MIN(impact_stats.sal_per_USG) AS min_spUSG,
STDEV(impact_stats.per_cap) AS std_sal,
STDEV(impact_stats.sal_per_min) AS std_spMP,
STDEV(impact_stats.sal_per_WS) AS std_spWS,
STDEV(impact_stats.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats.sal_per_PER) AS std_spPER,
STDEV(impact_stats.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats.sal_per_USG) AS std_spUSG
FROM impact_stats
GROUP BY impact_stats.posID')
building_master <- sqldf('SELECT impact_stats.teamID,
SUM(impact_stats.per_cap) AS tot_sal,
SUM(impact_stats.sal_per_min) AS tot_spMP,
SUM(impact_stats.sal_per_WS) AS tot_spWS,
SUM(impact_stats.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats.sal_per_PER) AS tot_spPER,
SUM(impact_stats.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats.sal_per_USG) AS tot_spUSG,
AVG(impact_stats.per_cap) AS avg_sal,
AVG(impact_stats.sal_per_min) AS avg_spMP,
AVG(impact_stats.sal_per_WS) AS avg_spWS,
AVG(impact_stats.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats.sal_per_PER) AS avg_spPER,
AVG(impact_stats.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats.sal_per_USG) AS avg_spUSG,
MAX(impact_stats.per_cap) AS max_sal,
MAX(impact_stats.sal_per_min) AS max_spMP,
MAX(impact_stats.sal_per_WS) AS max_spWS,
MAX(impact_stats.sal_per_BPM) AS max_spBPM,
MAX(impact_stats.sal_per_PTS) AS max_spPTS,
MAX(impact_stats.sal_per_PER) AS max_spPER,
MAX(impact_stats.sal_per_VORP) AS max_spVORP,
MAX(impact_stats.sal_per_USG) AS max_spUSG,
MIN(impact_stats.per_cap) AS min_sal,
MIN(impact_stats.sal_per_min) AS min_spMP,
MIN(impact_stats.sal_per_WS) AS min_spWS,
MIN(impact_stats.sal_per_BPM) AS min_spBPM,
MIN(impact_stats.sal_per_PTS) AS min_spPTS,
MIN(impact_stats.sal_per_PER) AS min_spPER,
MIN(impact_stats.sal_per_VORP) AS min_spVORP,
MIN(impact_stats.sal_per_USG) AS min_spUSG,
STDEV(impact_stats.per_cap) AS std_sal,
STDEV(impact_stats.sal_per_min) AS std_spMP,
STDEV(impact_stats.sal_per_WS) AS std_spWS,
STDEV(impact_stats.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats.sal_per_PER) AS std_spPER,
STDEV(impact_stats.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats.sal_per_USG) AS std_spUSG
FROM impact_stats
GROUP BY impact_stats.teamID')
for (i in 1:length(building_master$teamID)) {
building_master$sal_C[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-C"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-C")))])
building_master$sal_PF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PF")))])
building_master$sal_PG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PG")))])
building_master$sal_SF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SF")))])
building_master$sal_SG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SG")))])
building_master$sal_Bench[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Bench"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Bench")))])
building_master$sal_Start[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Starter"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Starter")))])
}
closer_to_master <- sqldf('SELECT team_sal_elo.year_end, team_sal_elo.team_id, team_sal_elo.fran_id,
team_sal_elo.id, team_sal_elo.MaxElo, building_master.*
FROM team_sal_elo
LEFT JOIN building_master
ON team_sal_elo.id = building_master.teamID')
master <- closer_to_master[-c(1:3, 6)]
master <- master[-c(which(is.na(master$MaxElo))),]
write.csv(master, "master.csv", row.names = FALSE)
rm(list=ls())
elo <- read.csv("elo_prepped.csv")
team_salary <- read.csv("salary_prepped.csv")
impact_stats_adj <- read.csv("impact_stats_adj.csv")
elo$id <- paste0(elo$team_id, "-", elo$year_end)
team_salary$id <- paste0(team_salary$team_id, "-", team_salary$year_end)
impact_stats_adj$teamID <- paste0(impact_stats_adj$team_id, "-", impact_stats_adj$year_end)
impact_stats_adj$posID <- paste0(impact_stats_adj$teamID, "-", impact_stats_adj$pos)
impact_stats_adj$benchID <- paste0(impact_stats_adj$teamID, "-", impact_stats_adj$Bench)
team_sal_elo <- sqldf('SELECT team_salary.*, elo.MaxElo
FROM team_salary
LEFT JOIN elo
ON team_salary.id = elo.id')
building_master_bench <- sqldf('SELECT impact_stats_adj.teamID, impact_stats_adj.benchID,
COUNT(impact_stats_adj.per_cap) AS ct_bench,
SUM(impact_stats_adj.per_cap) AS tot_sal
FROM impact_stats_adj
GROUP BY impact_stats_adj.benchID')
building_master_test <- sqldf('SELECT impact_stats_adj.teamID, impact_stats_adj.posID,
COUNT(impact_stats_adj.per_cap) AS ct_pos,
SUM(impact_stats_adj.per_cap) AS tot_sal,
SUM(impact_stats_adj.sal_per_min) AS tot_spMP,
SUM(impact_stats_adj.sal_per_WS) AS tot_spWS,
SUM(impact_stats_adj.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats_adj.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats_adj.sal_per_PER) AS tot_spPER,
SUM(impact_stats_adj.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats_adj.sal_per_USG) AS tot_spUSG,
AVG(impact_stats_adj.per_cap) AS avg_sal,
AVG(impact_stats_adj.sal_per_min) AS avg_spMP,
AVG(impact_stats_adj.sal_per_WS) AS avg_spWS,
AVG(impact_stats_adj.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats_adj.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats_adj.sal_per_PER) AS avg_spPER,
AVG(impact_stats_adj.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats_adj.sal_per_USG) AS avg_spUSG,
MAX(impact_stats_adj.per_cap) AS max_sal,
MAX(impact_stats_adj.sal_per_min) AS max_spMP,
MAX(impact_stats_adj.sal_per_WS) AS max_spWS,
MAX(impact_stats_adj.sal_per_BPM) AS max_spBPM,
MAX(impact_stats_adj.sal_per_PTS) AS max_spPTS,
MAX(impact_stats_adj.sal_per_PER) AS max_spPER,
MAX(impact_stats_adj.sal_per_VORP) AS max_spVORP,
MAX(impact_stats_adj.sal_per_USG) AS max_spUSG,
MIN(impact_stats_adj.per_cap) AS min_sal,
MIN(impact_stats_adj.sal_per_min) AS min_spMP,
MIN(impact_stats_adj.sal_per_WS) AS min_spWS,
MIN(impact_stats_adj.sal_per_BPM) AS min_spBPM,
MIN(impact_stats_adj.sal_per_PTS) AS min_spPTS,
MIN(impact_stats_adj.sal_per_PER) AS min_spPER,
MIN(impact_stats_adj.sal_per_VORP) AS min_spVORP,
MIN(impact_stats_adj.sal_per_USG) AS min_spUSG,
STDEV(impact_stats_adj.per_cap) AS std_sal,
STDEV(impact_stats_adj.sal_per_min) AS std_spMP,
STDEV(impact_stats_adj.sal_per_WS) AS std_spWS,
STDEV(impact_stats_adj.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats_adj.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats_adj.sal_per_PER) AS std_spPER,
STDEV(impact_stats_adj.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats_adj.sal_per_USG) AS std_spUSG
FROM impact_stats_adj
GROUP BY impact_stats_adj.posID')
building_master <- sqldf('SELECT impact_stats_adj.teamID,
SUM(impact_stats_adj.per_cap) AS tot_sal,
SUM(impact_stats_adj.sal_per_min) AS tot_spMP,
SUM(impact_stats_adj.sal_per_WS) AS tot_spWS,
SUM(impact_stats_adj.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats_adj.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats_adj.sal_per_PER) AS tot_spPER,
SUM(impact_stats_adj.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats_adj.sal_per_USG) AS tot_spUSG,
AVG(impact_stats_adj.per_cap) AS avg_sal,
AVG(impact_stats_adj.sal_per_min) AS avg_spMP,
AVG(impact_stats_adj.sal_per_WS) AS avg_spWS,
AVG(impact_stats_adj.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats_adj.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats_adj.sal_per_PER) AS avg_spPER,
AVG(impact_stats_adj.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats_adj.sal_per_USG) AS avg_spUSG,
MAX(impact_stats_adj.per_cap) AS max_sal,
MAX(impact_stats_adj.sal_per_min) AS max_spMP,
MAX(impact_stats_adj.sal_per_WS) AS max_spWS,
MAX(impact_stats_adj.sal_per_BPM) AS max_spBPM,
MAX(impact_stats_adj.sal_per_PTS) AS max_spPTS,
MAX(impact_stats_adj.sal_per_PER) AS max_spPER,
MAX(impact_stats_adj.sal_per_VORP) AS max_spVORP,
MAX(impact_stats_adj.sal_per_USG) AS max_spUSG,
MIN(impact_stats_adj.per_cap) AS min_sal,
MIN(impact_stats_adj.sal_per_min) AS min_spMP,
MIN(impact_stats_adj.sal_per_WS) AS min_spWS,
MIN(impact_stats_adj.sal_per_BPM) AS min_spBPM,
MIN(impact_stats_adj.sal_per_PTS) AS min_spPTS,
MIN(impact_stats_adj.sal_per_PER) AS min_spPER,
MIN(impact_stats_adj.sal_per_VORP) AS min_spVORP,
MIN(impact_stats_adj.sal_per_USG) AS min_spUSG,
STDEV(impact_stats_adj.per_cap) AS std_sal,
STDEV(impact_stats_adj.sal_per_min) AS std_spMP,
STDEV(impact_stats_adj.sal_per_WS) AS std_spWS,
STDEV(impact_stats_adj.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats_adj.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats_adj.sal_per_PER) AS std_spPER,
STDEV(impact_stats_adj.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats_adj.sal_per_USG) AS std_spUSG
FROM impact_stats_adj
GROUP BY impact_stats_adj.teamID')
for (i in 1:length(building_master$teamID)) {
building_master$sal_C[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-C"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-C")))])
building_master$sal_PF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PF")))])
building_master$sal_PG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PG")))])
building_master$sal_SF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SF")))])
building_master$sal_SG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SG")))])
building_master$sal_Bench[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Bench"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Bench")))])
building_master$sal_Start[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Starter"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Starter")))])
}
closer_to_master <- sqldf('SELECT team_sal_elo.year_end, team_sal_elo.team_id, team_sal_elo.fran_id,
team_sal_elo.id, team_sal_elo.MaxElo, building_master.*
FROM team_sal_elo
LEFT JOIN building_master
ON team_sal_elo.id = building_master.teamID')
master <- closer_to_master[-c(1:3, 6)]
master <- master[-c(which(is.na(master$MaxElo))),]
write.csv(master, "master_adj.csv", row.names = FALSE)
rm(list=ls())
rm(list=ls())
##Combine player data into team data ##
elo <- read.csv("elo_prepped.csv")
team_salary <- read.csv("salary_prepped.csv")
impact_stats <- read.csv("impact_stats.csv")
elo$id <- paste0(elo$team_id, "-", elo$year_end)
team_salary$id <- paste0(team_salary$team_id, "-", team_salary$year_end)
impact_stats$teamID <- paste0(impact_stats$team_id, "-", impact_stats$year_end)
impact_stats$posID <- paste0(impact_stats$teamID, "-", impact_stats$pos)
impact_stats$benchID <- paste0(impact_stats$teamID, "-", impact_stats$Bench)
team_sal_elo <- sqldf('SELECT team_salary.*, elo.MaxElo
FROM team_salary
LEFT JOIN elo
ON team_salary.id = elo.id')
building_master_bench <- sqldf('SELECT impact_stats.teamID, impact_stats.benchID,
COUNT(impact_stats.per_cap) AS ct_bench,
SUM(impact_stats.per_cap) AS tot_sal
FROM impact_stats
GROUP BY impact_stats.benchID')
building_master_test <- sqldf('SELECT impact_stats.teamID, impact_stats.posID,
COUNT(impact_stats.per_cap) AS ct_pos,
SUM(impact_stats.per_cap) AS tot_sal,
SUM(impact_stats.sal_per_min) AS tot_spMP,
SUM(impact_stats.sal_per_WS) AS tot_spWS,
SUM(impact_stats.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats.sal_per_PER) AS tot_spPER,
SUM(impact_stats.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats.sal_per_USG) AS tot_spUSG,
AVG(impact_stats.per_cap) AS avg_sal,
AVG(impact_stats.sal_per_min) AS avg_spMP,
AVG(impact_stats.sal_per_WS) AS avg_spWS,
AVG(impact_stats.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats.sal_per_PER) AS avg_spPER,
AVG(impact_stats.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats.sal_per_USG) AS avg_spUSG,
MAX(impact_stats.per_cap) AS max_sal,
MAX(impact_stats.sal_per_min) AS max_spMP,
MAX(impact_stats.sal_per_WS) AS max_spWS,
MAX(impact_stats.sal_per_BPM) AS max_spBPM,
MAX(impact_stats.sal_per_PTS) AS max_spPTS,
MAX(impact_stats.sal_per_PER) AS max_spPER,
MAX(impact_stats.sal_per_VORP) AS max_spVORP,
MAX(impact_stats.sal_per_USG) AS max_spUSG,
MIN(impact_stats.per_cap) AS min_sal,
MIN(impact_stats.sal_per_min) AS min_spMP,
MIN(impact_stats.sal_per_WS) AS min_spWS,
MIN(impact_stats.sal_per_BPM) AS min_spBPM,
MIN(impact_stats.sal_per_PTS) AS min_spPTS,
MIN(impact_stats.sal_per_PER) AS min_spPER,
MIN(impact_stats.sal_per_VORP) AS min_spVORP,
MIN(impact_stats.sal_per_USG) AS min_spUSG,
STDEV(impact_stats.per_cap) AS std_sal,
STDEV(impact_stats.sal_per_min) AS std_spMP,
STDEV(impact_stats.sal_per_WS) AS std_spWS,
STDEV(impact_stats.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats.sal_per_PER) AS std_spPER,
STDEV(impact_stats.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats.sal_per_USG) AS std_spUSG
FROM impact_stats
GROUP BY impact_stats.posID')
building_master <- sqldf('SELECT impact_stats.teamID,
SUM(impact_stats.per_cap) AS tot_sal,
SUM(impact_stats.sal_per_min) AS tot_spMP,
SUM(impact_stats.sal_per_WS) AS tot_spWS,
SUM(impact_stats.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats.sal_per_PER) AS tot_spPER,
SUM(impact_stats.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats.sal_per_USG) AS tot_spUSG,
AVG(impact_stats.per_cap) AS avg_sal,
AVG(impact_stats.sal_per_min) AS avg_spMP,
AVG(impact_stats.sal_per_WS) AS avg_spWS,
AVG(impact_stats.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats.sal_per_PER) AS avg_spPER,
AVG(impact_stats.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats.sal_per_USG) AS avg_spUSG,
MAX(impact_stats.per_cap) AS max_sal,
MAX(impact_stats.sal_per_min) AS max_spMP,
MAX(impact_stats.sal_per_WS) AS max_spWS,
MAX(impact_stats.sal_per_BPM) AS max_spBPM,
MAX(impact_stats.sal_per_PTS) AS max_spPTS,
MAX(impact_stats.sal_per_PER) AS max_spPER,
MAX(impact_stats.sal_per_VORP) AS max_spVORP,
MAX(impact_stats.sal_per_USG) AS max_spUSG,
MIN(impact_stats.per_cap) AS min_sal,
MIN(impact_stats.sal_per_min) AS min_spMP,
MIN(impact_stats.sal_per_WS) AS min_spWS,
MIN(impact_stats.sal_per_BPM) AS min_spBPM,
MIN(impact_stats.sal_per_PTS) AS min_spPTS,
MIN(impact_stats.sal_per_PER) AS min_spPER,
MIN(impact_stats.sal_per_VORP) AS min_spVORP,
MIN(impact_stats.sal_per_USG) AS min_spUSG,
STDEV(impact_stats.per_cap) AS std_sal,
STDEV(impact_stats.sal_per_min) AS std_spMP,
STDEV(impact_stats.sal_per_WS) AS std_spWS,
STDEV(impact_stats.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats.sal_per_PER) AS std_spPER,
STDEV(impact_stats.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats.sal_per_USG) AS std_spUSG
FROM impact_stats
GROUP BY impact_stats.teamID')
for (i in 1:length(building_master$teamID)) {
building_master$sal_C[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-C"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-C")))])
building_master$sal_PF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PF")))])
building_master$sal_PG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PG")))])
building_master$sal_SF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SF")))])
building_master$sal_SG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SG")))])
building_master$sal_Bench[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Bench"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Bench")))])
building_master$sal_Start[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Starter"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Starter")))])
}
closer_to_master <- sqldf('SELECT team_sal_elo.year_end, team_sal_elo.team_id, team_sal_elo.fran_id,
team_sal_elo.id, team_sal_elo.MaxElo, building_master.*
FROM team_sal_elo
LEFT JOIN building_master
ON team_sal_elo.id = building_master.teamID')
master <- closer_to_master[-c(1:3, 6)]
master <- master[-c(which(is.na(master$MaxElo))),]
write.csv(master, "master.csv", row.names = FALSE)
rm(list=ls())
elo <- read.csv("elo_prepped.csv")
team_salary <- read.csv("salary_prepped.csv")
impact_stats_adj <- read.csv("impact_stats_adj.csv")
elo$id <- paste0(elo$team_id, "-", elo$year_end)
team_salary$id <- paste0(team_salary$team_id, "-", team_salary$year_end)
impact_stats_adj$teamID <- paste0(impact_stats_adj$team_id, "-", impact_stats_adj$year_end)
impact_stats_adj$posID <- paste0(impact_stats_adj$teamID, "-", impact_stats_adj$pos)
impact_stats_adj$benchID <- paste0(impact_stats_adj$teamID, "-", impact_stats_adj$Bench)
team_sal_elo <- sqldf('SELECT team_salary.*, elo.MaxElo
FROM team_salary
LEFT JOIN elo
ON team_salary.id = elo.id')
building_master_bench <- sqldf('SELECT impact_stats_adj.teamID, impact_stats_adj.benchID,
COUNT(impact_stats_adj.sal_2020) AS ct_bench,
SUM(impact_stats_adj.sal_2020) AS tot_sal
FROM impact_stats_adj
GROUP BY impact_stats_adj.benchID')
building_master_test <- sqldf('SELECT impact_stats_adj.teamID, impact_stats_adj.posID,
COUNT(impact_stats_adj.sal_2020) AS ct_pos,
SUM(impact_stats_adj.sal_2020) AS tot_sal,
SUM(impact_stats_adj.sal_per_min) AS tot_spMP,
SUM(impact_stats_adj.sal_per_WS) AS tot_spWS,
SUM(impact_stats_adj.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats_adj.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats_adj.sal_per_PER) AS tot_spPER,
SUM(impact_stats_adj.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats_adj.sal_per_USG) AS tot_spUSG,
AVG(impact_stats_adj.sal_2020) AS avg_sal,
AVG(impact_stats_adj.sal_per_min) AS avg_spMP,
AVG(impact_stats_adj.sal_per_WS) AS avg_spWS,
AVG(impact_stats_adj.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats_adj.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats_adj.sal_per_PER) AS avg_spPER,
AVG(impact_stats_adj.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats_adj.sal_per_USG) AS avg_spUSG,
MAX(impact_stats_adj.sal_2020) AS max_sal,
MAX(impact_stats_adj.sal_per_min) AS max_spMP,
MAX(impact_stats_adj.sal_per_WS) AS max_spWS,
MAX(impact_stats_adj.sal_per_BPM) AS max_spBPM,
MAX(impact_stats_adj.sal_per_PTS) AS max_spPTS,
MAX(impact_stats_adj.sal_per_PER) AS max_spPER,
MAX(impact_stats_adj.sal_per_VORP) AS max_spVORP,
MAX(impact_stats_adj.sal_per_USG) AS max_spUSG,
MIN(impact_stats_adj.sal_2020) AS min_sal,
MIN(impact_stats_adj.sal_per_min) AS min_spMP,
MIN(impact_stats_adj.sal_per_WS) AS min_spWS,
MIN(impact_stats_adj.sal_per_BPM) AS min_spBPM,
MIN(impact_stats_adj.sal_per_PTS) AS min_spPTS,
MIN(impact_stats_adj.sal_per_PER) AS min_spPER,
MIN(impact_stats_adj.sal_per_VORP) AS min_spVORP,
MIN(impact_stats_adj.sal_per_USG) AS min_spUSG,
STDEV(impact_stats_adj.sal_2020) AS std_sal,
STDEV(impact_stats_adj.sal_per_min) AS std_spMP,
STDEV(impact_stats_adj.sal_per_WS) AS std_spWS,
STDEV(impact_stats_adj.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats_adj.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats_adj.sal_per_PER) AS std_spPER,
STDEV(impact_stats_adj.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats_adj.sal_per_USG) AS std_spUSG
FROM impact_stats_adj
GROUP BY impact_stats_adj.posID')
building_master <- sqldf('SELECT impact_stats_adj.teamID,
SUM(impact_stats_adj.sal_2020) AS tot_sal,
SUM(impact_stats_adj.sal_per_min) AS tot_spMP,
SUM(impact_stats_adj.sal_per_WS) AS tot_spWS,
SUM(impact_stats_adj.sal_per_BPM) AS tot_spBPM,
SUM(impact_stats_adj.sal_per_PTS) AS tot_spPTS,
SUM(impact_stats_adj.sal_per_PER) AS tot_spPER,
SUM(impact_stats_adj.sal_per_VORP) AS tot_spVORP,
SUM(impact_stats_adj.sal_per_USG) AS tot_spUSG,
AVG(impact_stats_adj.sal_2020) AS avg_sal,
AVG(impact_stats_adj.sal_per_min) AS avg_spMP,
AVG(impact_stats_adj.sal_per_WS) AS avg_spWS,
AVG(impact_stats_adj.sal_per_BPM) AS avg_spBPM,
AVG(impact_stats_adj.sal_per_PTS) AS avg_spPTS,
AVG(impact_stats_adj.sal_per_PER) AS avg_spPER,
AVG(impact_stats_adj.sal_per_VORP) AS avg_spVORP,
AVG(impact_stats_adj.sal_per_USG) AS avg_spUSG,
MAX(impact_stats_adj.sal_2020) AS max_sal,
MAX(impact_stats_adj.sal_per_min) AS max_spMP,
MAX(impact_stats_adj.sal_per_WS) AS max_spWS,
MAX(impact_stats_adj.sal_per_BPM) AS max_spBPM,
MAX(impact_stats_adj.sal_per_PTS) AS max_spPTS,
MAX(impact_stats_adj.sal_per_PER) AS max_spPER,
MAX(impact_stats_adj.sal_per_VORP) AS max_spVORP,
MAX(impact_stats_adj.sal_per_USG) AS max_spUSG,
MIN(impact_stats_adj.sal_2020) AS min_sal,
MIN(impact_stats_adj.sal_per_min) AS min_spMP,
MIN(impact_stats_adj.sal_per_WS) AS min_spWS,
MIN(impact_stats_adj.sal_per_BPM) AS min_spBPM,
MIN(impact_stats_adj.sal_per_PTS) AS min_spPTS,
MIN(impact_stats_adj.sal_per_PER) AS min_spPER,
MIN(impact_stats_adj.sal_per_VORP) AS min_spVORP,
MIN(impact_stats_adj.sal_per_USG) AS min_spUSG,
STDEV(impact_stats_adj.sal_2020) AS std_sal,
STDEV(impact_stats_adj.sal_per_min) AS std_spMP,
STDEV(impact_stats_adj.sal_per_WS) AS std_spWS,
STDEV(impact_stats_adj.sal_per_BPM) AS std_spBPM,
STDEV(impact_stats_adj.sal_per_PTS) AS std_spPTS,
STDEV(impact_stats_adj.sal_per_PER) AS std_spPER,
STDEV(impact_stats_adj.sal_per_VORP) AS std_spVORP,
STDEV(impact_stats_adj.sal_per_USG) AS std_spUSG
FROM impact_stats_adj
GROUP BY impact_stats_adj.teamID')
for (i in 1:length(building_master$teamID)) {
building_master$sal_C[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-C"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-C")))])
building_master$sal_PF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PF")))])
building_master$sal_PG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-PG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-PG")))])
building_master$sal_SF[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SF"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SF")))])
building_master$sal_SG[i] <- ifelse(length(which(building_master_test$posID == paste0(
building_master$teamID[i], "-SG"))) == 0, "NA", building_master_test$tot_sal[c(which(
building_master_test$posID == paste0(building_master$teamID[i], "-SG")))])
building_master$sal_Bench[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Bench"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Bench")))])
building_master$sal_Start[i] <- ifelse(length(which(building_master_bench$benchID == paste0(
building_master$teamID[i], "-Starter"))) == 0, "NA", building_master_bench$tot_sal[c(which(
building_master_bench$benchID == paste0(building_master$teamID[i], "-Starter")))])
}
closer_to_master <- sqldf('SELECT team_sal_elo.year_end, team_sal_elo.team_id, team_sal_elo.fran_id,
team_sal_elo.id, team_sal_elo.MaxElo, building_master.*
FROM team_sal_elo
LEFT JOIN building_master
ON team_sal_elo.id = building_master.teamID')
master <- closer_to_master[-c(1:3, 6)]
master <- master[-c(which(is.na(master$MaxElo))),]
write.csv(master, "master_adj.csv", row.names = FALSE)
rm(list=ls())
